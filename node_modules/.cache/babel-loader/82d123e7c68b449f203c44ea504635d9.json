{"ast":null,"code":"import React from'react';import useFetch from'../hooks/useFetch';import Excercises from'./Excercises';import Loading from'../components/Loading';import FatalError from'./500';import Url from'../config';var ExcersisesContainer=function ExcersisesContainer(){var _useFetch=useFetch(\"\".concat(Url,\"/exercises\")),data=_useFetch.data,loading=_useFetch.loading,error=_useFetch.error;if(loading){return/*#__PURE__*/React.createElement(Loading,null);}if(error){return/*#__PURE__*/React.createElement(FatalError,null);}return/*#__PURE__*/React.createElement(Excercises,{data:data});};/* \nclass ExcersisesContainer extends React.Component{\n        state = {\n            data: [],\n            loading:true,\n            error : null\n        }\n\n        async componentDidMount(){\n            await this.fetchExercises()\n        }\n\n        fetchExercises = async () => {\n\n            try{\n                let res = await fetch('http://localhost:8000/api/exercises')\n                let data = await res.json();\n            \n                this.setState({\n                    data,\n                    loading:false\n                })    \n            }\n            catch (error){\n                this.setState({                    \n                    loading:false,\n                    error\n                })  \n            }\n            \n        } \n\n        render(){\n            if(this.state.loading)\n                return <Loading/>\n\n            if(this.state.error)\n                return <FatalError/>\n                \n            return(\n                <Excercises\n                data={this.state.data}\n                />\n            )\n        }\n    }\n    \n */export default ExcersisesContainer;","map":{"version":3,"sources":["/home/jeexe/mi_web/src/pages/ExercisesContainer.js"],"names":["React","useFetch","Excercises","Loading","FatalError","Url","ExcersisesContainer","data","loading","error"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,mBAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,OAAvB,CACA,MAAOC,CAAAA,GAAP,KAAgB,WAAhB,CACA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,eAGDL,QAAQ,WAAII,GAAJ,eAHP,CAGvBE,IAHuB,WAGvBA,IAHuB,CAGlBC,OAHkB,WAGlBA,OAHkB,CAGVC,KAHU,WAGVA,KAHU,CAK9B,GAAGD,OAAH,CAAW,CACP,mBAAO,oBAAC,OAAD,MAAP,CACH,CAED,GAAGC,KAAH,CAAS,CACL,mBAAO,oBAAC,UAAD,MAAP,CACH,CAED,mBACA,oBAAC,UAAD,EACI,IAAI,CAAEF,IADV,EADA,CAOH,CApBD,CAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,cAAeD,CAAAA,mBAAf","sourcesContent":["import React from 'react'\nimport useFetch from '../hooks/useFetch'\nimport Excercises from './Excercises'\nimport Loading from '../components/Loading'\nimport FatalError from './500'\nimport Url from '../config'\nconst ExcersisesContainer = () => {\n \n    \n    const {data,loading,error} = useFetch(`${Url}/exercises`);\n\n    if(loading){\n        return <Loading/>\n    }\n\n    if(error){\n        return <FatalError/>\n    }\n\n    return (\n    <Excercises\n        data={data}\n        />\n    )\n\n    \n}\n/* \nclass ExcersisesContainer extends React.Component{\n        state = {\n            data: [],\n            loading:true,\n            error : null\n        }\n\n        async componentDidMount(){\n            await this.fetchExercises()\n        }\n\n        fetchExercises = async () => {\n\n            try{\n                let res = await fetch('http://localhost:8000/api/exercises')\n                let data = await res.json();\n            \n                this.setState({\n                    data,\n                    loading:false\n                })    \n            }\n            catch (error){\n                this.setState({                    \n                    loading:false,\n                    error\n                })  \n            }\n            \n        } \n\n        render(){\n            if(this.state.loading)\n                return <Loading/>\n\n            if(this.state.error)\n                return <FatalError/>\n                \n            return(\n                <Excercises\n                data={this.state.data}\n                />\n            )\n        }\n    }\n    \n */\n\nexport default ExcersisesContainer"]},"metadata":{},"sourceType":"module"}