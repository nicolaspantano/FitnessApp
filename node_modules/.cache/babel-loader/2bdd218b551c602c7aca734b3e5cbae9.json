{"ast":null,"code":"var _jsxFileName = \"/home/jeexe/mi_web/src/pages/ExercisesContainer.js\";\nimport React, { useState } from 'react';\nimport Excercises from './Excercises';\nimport Loading from '../components/Loading';\nimport FatalError from './500';\n\nconst ExcersisesContainer = () => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  if ({\n    loading\n  }) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 16\n      }\n    });\n  }\n\n  if ({\n    error\n  }) {\n    return /*#__PURE__*/React.createElement(FatalError, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Excercises, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  });\n};\n/* \nclass ExcersisesContainer extends React.Component{\n        state = {\n            data: [],\n            loading:true,\n            error : null\n        }\n\n        async componentDidMount(){\n            await this.fetchExercises()\n        }\n\n        fetchExercises = async () => {\n\n            try{\n                let res = await fetch('http://localhost:8000/api/exercises')\n                let data = await res.json();\n            \n                this.setState({\n                    data,\n                    loading:false\n                })    \n            }\n            catch (error){\n                this.setState({                    \n                    loading:false,\n                    error\n                })  \n            }\n            \n        } \n\n        render(){\n            if(this.state.loading)\n                return <Loading/>\n\n            if(this.state.error)\n                return <FatalError/>\n                \n            return(\n                <Excercises\n                data={this.state.data}\n                />\n            )\n        }\n    }\n    \n */\n\n\nexport default ExcersisesContainer;","map":{"version":3,"sources":["/home/jeexe/mi_web/src/pages/ExercisesContainer.js"],"names":["React","useState","Excercises","Loading","FatalError","ExcersisesContainer","data","setData","loading","setLoading","error","setError"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,OAAvB;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAC9B,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBN,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACO,OAAD,EAASC,UAAT,IAAuBR,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM,CAACS,KAAD,EAAOC,QAAP,IAAmBV,QAAQ,CAAC,IAAD,CAAjC;;AAIA,MAAG;AAACO,IAAAA;AAAD,GAAH,EAAa;AACT,wBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,MAAG;AAACE,IAAAA;AAAD,GAAH,EAAW;AACP,wBAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,sBACA,oBAAC,UAAD;AACI,IAAA,IAAI,EAAEJ,IADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA;AAOH,CAtBD;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeD,mBAAf","sourcesContent":["import React, {useState} from 'react';\nimport Excercises from './Excercises'\nimport Loading from '../components/Loading'\nimport FatalError from './500'\n\nconst ExcersisesContainer = () => {\n    const [data,setData] = useState([]);\n    const [loading,setLoading] = useState(true);\n    const [error,setError] = useState(null);\n\n    \n\n    if({loading}){\n        return <Loading/>\n    }\n\n    if({error}){\n        return <FatalError/>\n    }\n\n    return (\n    <Excercises\n        data={data}\n        />\n    )\n\n    \n}\n/* \nclass ExcersisesContainer extends React.Component{\n        state = {\n            data: [],\n            loading:true,\n            error : null\n        }\n\n        async componentDidMount(){\n            await this.fetchExercises()\n        }\n\n        fetchExercises = async () => {\n\n            try{\n                let res = await fetch('http://localhost:8000/api/exercises')\n                let data = await res.json();\n            \n                this.setState({\n                    data,\n                    loading:false\n                })    \n            }\n            catch (error){\n                this.setState({                    \n                    loading:false,\n                    error\n                })  \n            }\n            \n        } \n\n        render(){\n            if(this.state.loading)\n                return <Loading/>\n\n            if(this.state.error)\n                return <FatalError/>\n                \n            return(\n                <Excercises\n                data={this.state.data}\n                />\n            )\n        }\n    }\n    \n */\n\nexport default ExcersisesContainer"]},"metadata":{},"sourceType":"module"}